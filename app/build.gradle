plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.example.f2f'
    compileSdk 32

    defaultConfig {
        applicationId "com.example.f2f"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:+'
    implementation 'com.google.android.material:material:+'
    implementation 'androidx.constraintlayout:constraintlayout:+'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:+'
    androidTestImplementation 'androidx.test.espresso:espresso-core:+'

    // lifecycle_version and architecture versions may vary
    def lifecycle_version ="2.3.1"
    def arch_version ="2.1.0"

   // ViewModel
    // Its principal advantage is that it caches state and persists it through configuration changes.
    // This means that your UI doesnâ€™t have to fetch data
    // again when navigating between activities, or following configuration changes, such as when
    // rotating the screen.
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

   // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

  //architecture Lifecycle extensions
    implementation "androidx.lifecycle:lifecycle-extensions:$arch_version"

}